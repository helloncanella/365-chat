{"version":3,"sources":["templates/Registration/Registration.js","templates/Registration/index.js","components/FAIcon/FAIcon.js","components/MenuItem/MenuItem.js","templates/Chat/fakeData.js","hocs/receiversFromRoute.js","templates/Chat/components/Header/Header.js","templates/Chat/components/Header/index.js","templates/Chat/components/AllMessages/components/Message/Message.js","templates/Chat/components/AllMessages/AllMessages.js","templates/Chat/components/AllMessages/index.js","templates/Chat/components/Footer/index.js","templates/Chat/components/Footer/Footer.js","templates/Chat/Chat.js","components/ScreenCentered/ScreenCentered.js","templates/Home/routes/sections.routes.js","hocs/withContacts.js","templates/NoMatch/NoMatch.js","templates/Home/components/Main/index.js","templates/Home/components/Main/Main.js","templates/Home/Home.js","templates/App/App.js","serviceWorker.js","lib/setupApollo.js","index.js"],"names":["Registration","onSubmit","e","preventDefault","_this","input","value","props","registerUser","name","_this2","this","react_default","a","createElement","className","type","ref","disabled","isRegistering","Component","CREATE_USER","gql","_templateObject","randomColor","colors","_","random","length","compose","withRouter","withState","graphql","_ref","mutate","createUser","_createUser","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref2","result","_args","arguments","wrap","_context","prev","next","undefined","variables","color","sent","abrupt","get","stop","apply","withHandlers","_ref4","_callee2","_ref3","newUser","_context2","setLoadingState","localStorage","setItem","_id","history","push","_x","FAICon","icon","style","concat","MenuItem","_ref$icon","_ref$rightComponent","rightComponent","path","NavLink","activeClassName","objectSpread","to","contacts","id","isOnline","withProps","match","receivers","params","find","user","pure","receiver","roomId","Header","avatar","text","date","moment","format","split","map","paragraph","index","key","Date","getTime","messages","message","Message_Message","ALL_MESSAGES","AllMessages_templateObject","NEW_MESSAGE","_templateObject2","mapProps","data","loading","_ref$messages","formatMessage","sort","sortByDate","subscription","newMessage","toConsumableArray","AllMessages","b","g","display","borderRadius","width","height","alignItems","justifyContent","background","placeholder","Chat","components_Header","body","components_Footer","lib","components_AllMessages","ScreenCentered","children","sections_routes","exact","render","fontSize","from","redirect","NoMatch","withContacts","_ref$contacts","Switch","sectionsRoutes","component","basicProps","Redirect","assign","Route","join","url","c","Home","src","alt","secondMenu","components_Main","filter","selected","link","sectionsMenu","favoriteContacts","App","getItem","templates_Home_Home","Boolean","window","location","hostname","host","wsLink","WebSocketLink","uri","options","reconnect","httpLink","HttpLink","query","_getMainDefinition","getMainDefinition","kind","operation","ReactDOM","react_apollo_esm","client","ApolloClient","cache","InMemoryCache","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20e50276.chunk.js","sourcesContent":["import \"./registration.scss\"\n\nimport React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\n\nclass Registration extends Component {\n  onSubmit = e => {\n    e.preventDefault()\n    this.input.value && this.props.registerUser({ name: this.input.value })\n  }\n\n  render() {\n    return (\n      <div className=\"registration\">\n        <div className=\"registration-card\">\n          <div className=\"logo\">365</div>\n          <div className=\"content\">\n            <h2>Your name</h2>\n            <form onSubmit={this.onSubmit}>\n              <input type=\"text\" ref={e => (this.input = e)} />\n              <button type=\"submit\" disabled={this.props.isRegistering}>\n                {this.props.isRegistering ? \"loading...\" : \"register\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Registration\n\nRegistration.propTypes = {\n  isRegistering: PropTypes.bool,\n\n  /** @param {String} name */\n  registerUser: PropTypes.func\n}\n","import { compose, withHandlers, withState } from \"recompose\"\nimport Registration from \"./Registration\"\nimport { withRouter } from \"react-router-dom\"\nimport { graphql } from \"react-apollo\"\nimport gql from \"graphql-tag\"\nimport _ from \"lodash\"\n\nconst CREATE_USER = gql`\n  mutation CreateUser($name: String!, $color: String!) {\n    createUser(name: $name, color: $color) {\n      _id\n    }\n  }\n`\n\nconst randomColor = () => {\n  const colors = [\"purple\", \"blue\", \"red\", \"orange\", \"green\", \"indigo\"]\n  return colors[_.random(0, colors.length - 1)]\n}\n\nexport default compose(\n  withRouter,\n  withState(\"isRegistering\", \"setLoadingState\", false),\n  graphql(CREATE_USER, {\n    props: ({ mutate }) => {\n      return {\n        createUser: async ({ name } = {}) => {\n          const result = await mutate({\n            variables: { name, color: randomColor() }\n          })\n          return _.get(result, \"data.createUser\")\n        }\n      }\n    }\n  }),\n\n  withHandlers({\n    registerUser: props => async ({ name }) => {\n      if (!name) return\n      props.setLoadingState(true)\n      const newUser = await props.createUser({ name })\n      localStorage.setItem(\"loggedUserId\", newUser._id)\n      props.setLoadingState(false)\n      props.history.push(\"/\")\n    }\n  })\n)(Registration)\n","import React from \"react\"\n\nexport default function FAICon({ icon, className, style }) {\n  return (\n    <div className={`fa fa-${icon} ${className || \"\"}`} style={style || {}} />\n  )\n}\n","import React from \"react\"\nimport \"./menuItem.scss\"\nimport { NavLink } from \"react-router-dom\"\n\nexport default function MenuItem({\n  name,\n  icon = null,\n  rightComponent = null,\n  className,\n  path,\n  style\n} = {}) {\n  return (\n    <NavLink\n      className={`menu-item ${className || \"\"}`}\n      activeClassName=\"selected\"\n      style={{ ...(style || {}) }}\n      to={path}\n    >\n      <div className=\"content\">\n        {icon && <div className=\"icon-container\">{icon}</div>}\n        <div className=\"name\">{name}</div>\n      </div>\n      {rightComponent}\n    </NavLink>\n  )\n}\n","export const contacts = [\n  // { name: \"Ocean\", color: \"orange\", id: \"ocean\", isOnline: true },\n  // { name: \"Richard\", color: \"red\", id: \"richard\", isOnline: false },\n  // { name: \"Jack\", color: \"green\", id: \"jack\", isOnline: true }\n  { name: \"Simple room\", color: \"orange\", id: \"single-room\", isOnline: true }\n]\n\nexport const loggedUser = { name: \"Frank\", color: \"purple\", id: \"frank\" }\n","import { withRouter } from \"react-router-dom\"\nimport { compose, withProps } from \"recompose\"\nimport { contacts } from \"../templates/Chat/fakeData\"\n\nconst findUser = id => contacts.find(user => user.id === id)\n\nexport default compose(\n  withRouter,\n  withProps(props => {\n    const { match } = props\n\n    if (!match) return\n\n    return { receivers: [findUser(match.params.id)] }\n  })\n)\n","import React from \"react\"\nimport { compose, pure } from \"recompose\"\nimport StatusDot from \"../../../../components/StatusDot/StatusDot\"\n\nfunction Header({ receiver } = {}) {\n  const { name, isOnline = false } = receiver || {}\n\n  return (\n    <div className=\"header\">\n      <h3 className=\"user-name\">Simple room</h3>\n      {/* <h3 className=\"user-name\">{`@${name}`}</h3> */}\n      {/* <StatusDot isOnline={isOnline} /> */}\n    </div>\n  )\n}\n\nexport default compose(pure)(Header)\n","import { compose, withProps } from \"recompose\"\nimport receiversFromRoute from \"hocs/receiversFromRoute\"\nimport Header from \"./Header\"\nimport { contacts } from \"../../fakeData\"\n\nexport default compose(\n  withProps(props => ({\n    receiver: contacts.find(({ id }) => id === props.roomId)\n  }))\n)(Header)\n","import React from \"react\"\nimport { compose, pure } from \"recompose\"\nimport moment from \"moment\"\n\nfunction Message({ name, avatar, text, date } = {}) {\n  return (\n    <div className=\"message\">\n      {avatar && <div className=\"avatar-column\">{avatar}</div>}\n      <div className=\"message-column\">\n        <div className=\"meta-header\">\n          <span className=\"name\">{name}</span>{\" \"}\n          <span className=\"date\">{moment(date).format(\"DD/MM/YYYY\")}</span>\n        </div>\n        <div className=\"message-body\">\n          {text.split(\"\\n\").map((paragraph, index) => (\n            <p key={`message-timestamp-${new Date(date).getTime()}-${index}`}>\n              {paragraph}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default compose(pure)(Message)\n","import React, { Component } from \"react\"\nimport { compose, pure } from \"recompose\"\nimport Message from \"./components/Message/Message\"\n\nfunction AllMessages(props) {\n  return (\n    <ul className=\"all-messages messages\">\n      {(props.messages || []).map((message, index) => {\n        return (\n          <li className=\"message-container\" key={`message-${index}`}>\n            <Message {...message} />\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default compose(pure)(AllMessages)\n","import _ from \"lodash\"\nimport FAIcon from \"components/FAIcon/FAIcon.js\"\nimport React from \"react\"\nimport { compose, mapProps, lifecycle, withProps } from \"recompose\"\nimport AllMessages from \"./AllMessages\"\nimport { graphql } from \"react-apollo\"\nimport gql from \"graphql-tag\"\n\nconst ALL_MESSAGES = gql`\n  query AllMessages {\n    messages {\n      _id\n      content\n      author {\n        _id\n        name\n        color\n      }\n      timestamp\n    }\n  }\n`\n\nconst NEW_MESSAGE = gql`\n  subscription NewMessage {\n    newMessage {\n      _id\n      content\n      timestamp\n      author {\n        _id\n        name\n        color\n      }\n    }\n  }\n`\n\nexport default compose(\n  graphql(ALL_MESSAGES),\n  mapProps(props => {\n    const { loading, messages = [] } = props.data || {}\n\n    return {\n      messages: messages.map(formatMessage).sort(sortByDate),\n      loading\n    }\n  }),\n  graphql(NEW_MESSAGE, { name: \"subscription\" }),\n  withProps(({ subscription, loading, messages }) => {\n    const { newMessage } = subscription || {}\n\n    return {\n      messages: newMessage\n        ? [...messages, formatMessage(newMessage)].sort(sortByDate)\n        : messages\n    }\n  })\n)(AllMessages)\n\nconst sortByDate = (a, b) =>\n  new Date(a.date).getTime() - new Date(b.date).getTime()\n\nfunction formatMessage(message) {\n  const g = key => _.get(message, key)\n\n  return {\n    name: g(\"author.name\"),\n    date: new Date(g(\"timestamp\")),\n    text: g(\"content\"),\n    avatar: (\n      <div\n        style={{\n          display: \"flex\",\n          borderRadius: \"50%\",\n          width: 50,\n          height: 50,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          background: g(\"author.color\")\n        }}\n      >\n        {/* <FAIcon icon=\"user\" style={{ fontSize: \"1.5rem\", color: \"white\" }} /> */}\n      </div>\n    )\n  }\n}\n","import { compose, withProps, mapProps } from \"recompose\"\nimport { contacts } from \"../../fakeData\"\nimport Footer from \"./Footer\"\n\nexport default compose(\n  mapProps(props => ({\n    receiver: contacts.find(({ id }) => props.roomId === id)\n  }))\n)(Footer)\n","import React from \"react\"\n\nexport default function Footer({ receiver }) {\n  return (\n    <div className=\"footer\">\n      <div className=\"input-container\">\n        <input type=\"text\" placeholder={`Message`} />\n        {/* <input type=\"text\" placeholder={`Message @${receiver.name || \"\"}`} /> */}\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport \"./chat.scss\"\nimport _ from \"lodash\"\n\nimport { Scrollbars } from \"react-custom-scrollbars\"\nimport Header from \"./components/Header\"\nimport AllMessages from \"./components/AllMessages\"\nimport Footer from \"./components/Footer\"\n\nclass Chat extends Component {\n  get body() {\n    return (\n      <Scrollbars className=\"body\">\n        <div className=\"body-content\">\n          <AllMessages roomId={this.roomId} />\n        </div>\n      </Scrollbars>\n    )\n  }\n\n  get roomId() {\n    return _.get(this.props, \"match.params.roomId\")\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n        <Header roomId={this.roomId} />\n        {this.body}\n        <Footer roomId={this.roomId} />\n      </div>\n    )\n  }\n}\n\nChat.propTypes = {}\n\nexport default Chat\n","import React from \"react\"\nexport default function ScreenCentered({ children }) {\n  const style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\"\n  }\n  return (\n    <div className=\"screen-centered\" style={style}>\n      {children}\n    </div>\n  )\n}\n","import React from \"react\"\nimport Chat from \"templates/Chat/Chat.js\"\nimport ScreenCentered from \"../../../components/ScreenCentered/ScreenCentered\"\n\nexport default [\n  // {\n  //   path: \"/\",\n  //   exact: true,\n  //   icon: \"home\",\n  //   name: \"Home\",\n  //   render: () => (\n  //     <ScreenCentered>\n  //       <h1 style={{ color: \"gray\", fontSize: \"5rem\" }}>Home list</h1>\n  //     </ScreenCentered>\n  //   )\n  // },\n\n  {\n    path: \"/chat-list\",\n    exact: true,\n    icon: \"comment\",\n    name: \"Chat\",\n    render: () => (\n      <ScreenCentered>\n        <h1 style={{ color: \"gray\", fontSize: \"5rem\" }}>Chat list</h1>\n      </ScreenCentered>\n    )\n  },\n  {\n    path: \"/partner\",\n    icon: \"users\",\n    name: \"Partner\",\n    render: () => (\n      <ScreenCentered>\n        <h1 style={{ color: \"gray\", fontSize: \"5rem\" }}>Partner</h1>\n      </ScreenCentered>\n    )\n  },\n  {\n    path: \"/document\",\n    icon: \"file-text\",\n    name: \"Document\",\n    render: () => (\n      <ScreenCentered>\n        <h1 style={{ color: \"gray\", fontSize: \"5rem\" }}>Document</h1>\n      </ScreenCentered>\n    )\n  },\n  {\n    from: \"/\",\n    redirect: \"/chat-list\",\n    exact: true\n  }\n]\n","import { compose, withProps } from \"recompose\"\nimport { contacts } from \"../templates/Chat/fakeData\"\n\nexport default compose(\n  withProps(props => {\n    return { contacts }\n  })\n)\n","import ScreenCentered from \"../../components/ScreenCentered/ScreenCentered\"\nimport React from \"react\"\n\nexport default function NoMatch() {\n  return (\n    <ScreenCentered>\n      <h1 style={{ color: \"gray\", fontSize: \"5rem\" }}>404</h1>\n    </ScreenCentered>\n  )\n}\n","import { compose } from \"recompose\"\nimport withContacts from \"../../../../hocs/withContacts\"\nimport Main from \"./Main\"\nimport { withRouter } from \"react-router-dom\"\n\nexport default compose(\n  withRouter,\n  withContacts\n)(Main)\n","import { join } from \"path\"\nimport React from \"react\"\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport sectionsRoutes from \"../../routes/sections.routes\"\nimport NoMatch from \"../../../NoMatch/NoMatch\"\nimport Chat from \"../../../Chat/Chat\"\n\nexport default function Main({ contacts = [], match } = {}) {\n  return (\n    <main>\n      <Switch>\n        {sectionsRoutes.map(\n          ({ component, render, path, redirect, exact, from } = {}, index) => {\n            const basicProps = { exact, key: `section-route-${index}` }\n            if (redirect)\n              return <Redirect {...basicProps} from={from} to={redirect} />\n\n            if (!path) return null\n            return (\n              <Route\n                {...basicProps}\n                render={render}\n                component={component}\n                path={join(match.url, path)}\n                key={`section-menu-item-${index}`}\n              />\n            )\n          }\n        )}\n\n        {/* All contact's rooms */}\n        <Route\n          path={`/chat/:roomId(${contacts.map(c => c.id).join(\"|\")})`}\n          component={Chat}\n        />\n\n        <Route component={NoMatch} />\n      </Switch>\n    </main>\n  )\n}\n","import React, { Component } from \"react\"\nimport \"./home.scss\"\nimport FAICon from \"components/FAIcon/FAIcon\"\nimport MenuItem from \"../../components/MenuItem/MenuItem\"\nimport sectionsRoutes from \"./routes/sections.routes\"\nimport { join } from \"path\"\nimport { contacts } from \"../Chat/fakeData\"\nimport Main from \"./components/Main\"\nimport StatusDot from \"../../components/StatusDot/StatusDot\"\n\nclass Home extends Component {\n  get sectionsMenu() {\n    return (\n      <ul className=\"sections-menu\">\n        {sectionsRoutes\n          .filter(a => !a.redirect)\n          .map(({ path, icon, name } = {}, index) => {\n            return (\n              <li key={`section-menu-item-${index}`}>\n                <MenuItem\n                  path={path}\n                  name={name}\n                  selected={false}\n                  icon={<FAICon className=\"icon\" icon={icon} />}\n                />\n              </li>\n            )\n          })}\n      </ul>\n    )\n  }\n\n  get favoriteContacts() {\n    return (\n      <div className=\"favorite-contacts\">\n        <h5 className=\"title\">Favorite Contacts</h5>\n        <ul className=\"contacts\">\n          {contacts.map(\n            ({ link, icon, name, color, id, isOnline } = {}, index) => {\n              return (\n                <li key={`contact-${index}`}>\n                  <MenuItem\n                    name={name}\n                    path={join(\"/chat\", id)}\n                    icon={\n                      <div\n                        style={{\n                          width: 30,\n                          height: 30,\n                          background: color,\n                          borderRadius: \"50%\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        }}\n                      >\n                        {/* <FAICon icon=\"user\" style={{ color: \"white\" }} /> */}\n                      </div>\n                    }\n                    // rightComponent={<StatusDot isOnline={isOnline} />}\n                  />\n                </li>\n              )\n            }\n          )}\n        </ul>\n      </div>\n    )\n  }\n\n  get secondMenu() {\n    return (\n      <div className=\"second-menu\">\n        {this.sectionsMenu}\n        {this.favoriteContacts}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"first-menu\">\n          <img src=\"/images/365-logo.png\" alt=\"logo\" />\n        </div>\n        <div className=\"wrap\">\n          <div className=\"notifications\" />\n          {this.secondMenu}\n          <Main />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import { Route, Switch, Redirect } from \"react-router-dom\"\nimport React, { Component } from \"react\"\nimport Registration from \"templates/Registration\"\nimport Home from \"templates/Home/Home.js\"\nimport NoMatch from \"../NoMatch/NoMatch\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route component={Registration} path=\"/registration\" exact />\n          <Route\n            path=\"/\"\n            render={() => {\n              if (!localStorage.getItem(\"loggedUserId\"))\n                return <Redirect to=\"/registration\" />\n              return <Home />\n            }}\n          />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApolloClient } from \"apollo-client\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { split } from \"apollo-link\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { WebSocketLink } from \"apollo-link-ws\"\nimport { getMainDefinition } from \"apollo-utilities\"\n\nconst isProduction = process.env.NODE_ENV === \"production\"\nconst host = isProduction ? \"chat-365.herokuapp.com\" : \"localhost:8365\"\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://${host}/graphql`,\n  options: {\n    reconnect: true\n  }\n})\n\nconst httpLink = new HttpLink({\n  uri: `http://${host}/graphql`\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === \"OperationDefinition\" && operation === \"subscription\"\n  },\n  wsLink,\n  httpLink\n)\n\nexport default function setupApollo() {\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache()\n  })\n\n  return client\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/index.scss\"\nimport App from \"./templates/App/App.js\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport { ApolloProvider } from \"react-apollo\"\nimport setupApollo from \"./lib/setupApollo\"\n\nReactDOM.render(\n  <ApolloProvider client={setupApollo()}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}